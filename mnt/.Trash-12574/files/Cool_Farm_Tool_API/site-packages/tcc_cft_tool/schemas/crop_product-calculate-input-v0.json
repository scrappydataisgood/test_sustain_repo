{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://coolfarmtool.org/v0/crop_calculate.json",
  "type": "object",
  "title": "Crop \"Calculate\"",
  "required": [
    "farm",
    "crop",
    "pesticides",
    "machinery",
    "fertilisers",
    "direct_energy",
    "land_management",
    "transport",
    "tree_biomass",
    "co_products",
    "processing",
    "irrigation",
    "storage"
  ],
  "properties": {
    "farm": {
      "$id": "#/properties/farm",
      "type": "object",
      "required": [
        "country",
        "territory",
        "climate",
        "average_temperature"
      ],
      "properties": {
        "country": {
          "$id": "#/properties/farm/properties/country",
          "type": [
            "integer",
            "string"
          ],
          "description": ":ref:`country` name or ID *(Farm Settings → Country)*",
          "examples": [
            "Ghana"
          ]
        },
        "territory": {
          "$id": "#/properties/farm/properties/territory",
          "type": [
            "integer",
            "string",
            "null"
          ],
          "description": ":ref:`territory` name or ID; send ``null`` if selected Country has no territories *(Farm Settings → Territory)*",
          "examples": [
            "Alabama"
          ]
        },
        "climate": {
          "$id": "#/properties/farm/properties/climate",
          "type": [
            "integer",
            "string"
          ],
          "description": ":ref:`climate` *(Farm Settings → Climate)*",
          "examples": [
            "temperate"
          ]
        },
        "average_temperature": {
          "$id": "#/properties/farm/properties/average_temperature",
          "type": "object",
          "properties": {
            "value": {
              "$id": "#/properties/farm/properties/average_temperature/properties/value",
              "type": "number",
              "description": "*(Farm Settings → Average Annual Temperature Value)*"
            },
            "unit": {
              "$id": "#/properties/farm/properties/average_temperature/properties/unit",
              "type": [
                "string",
                "number"
              ],
              "examples": [
                "°C"
              ],
              "description": "Temperature :ref:`unit` name or ID *(Farm Settings → Average Annual Temperature Unit)*"
            }
          }
        },
        "farm_identifier": {
          "$id": "#/properties/farm/properties/farm_identifier",
          "type": [
            "string",
            "number"
          ],
          "description": "*(Farm Settings → Farm Identifier)*"
        }
      }
    },
    "crop": {
      "$id": "#/properties/crop",
      "type": "object",
      "required": [
        "product_fresh",
        "product_finished",
        "type",
        "residue",
        "seed_amount",
        "field_size",
        "soil"
      ],
      "properties": {
        "product_fresh": {
          "$id": "#/properties/crop/properties/product_fresh",
          "type": "object",
          "properties": {
            "value": {
              "$id": "#/properties/crop/properties/product_fresh/properties/value",
              "type": "number",
              "description": "Fresh product yield *(Crop → Gross Yield)*",
              "minimum": 0,
              "examples": [
                10
              ]
            },
            "unit": {
              "$id": "#/properties/crop/properties/product_fresh/properties/unit",
              "type": [
                "integer",
                "string"
              ],
              "examples": [
                "tonne"
              ],
              "description": "Weight, volume or unit :ref:`unit` name or ID *(Crop → Gross Yield Unit)*"
            }
          }
        },
        "product_finished": {
          "$id": "#/properties/crop/properties/product_finished",
          "type": "object",
          "properties": {
            "value": {
              "$id": "#/properties/crop/properties/product_finished/properties/value",
              "type": "number",
              "description": "Fresh product yield *(Crop → Net Yield)*",
              "minimum": 0,
              "examples": [
                10
              ]
            },
            "unit": {
              "$id": "#/properties/crop/properties/product_finished/properties/unit",
              "type": [
                "integer",
                "string"
              ],
              "examples": [
                "tonne"
              ],
              "description": "Weight, volume or unit :ref:`unit` name or ID *(Crop → Net Yield Unit)**"
            }
          }
        },
        "type": {
          "$id": "#/properties/crop/properties/type",
          "type": [
            "integer",
            "string"
          ],
          "description": ":ref:`crop-type` *(Crop → Crop Name)*",
          "examples": [
            "Barley"
          ]
        },
        "field_size": {
          "$id": "#/properties/farm/properties/field_size",
          "type": "object",
          "properties": {
            "value": {
              "$id": "#/properties/farm/properties/field_size/properties/value",
              "description": "Growing area size *(Crop → Crop Area)*",
              "minimum": 0,
              "examples": [
                1
              ]
            },
            "unit": {
              "$id": "#/properties/farm/properties/field_size/properties/unit",
              "type": [
                "integer",
                "string"
              ],
              "description": "Area :ref:`unit` name or ID *(Crop → Crop Area Unit)*",
              "examples": [
                "ha"
              ]
            }
          }
        },
        "soil": {
          "$id": "#/properties/farm/properties/soil",
          "type": "object",
          "required": [
            "texture_id",
            "organic_matter_id",
            "moisture_id",
            "drainage_id",
            "ph_id"
          ],
          "properties": {
            "texture_id": {
              "$id": "#/properties/farm/properties/soil/properties/texture_id",
              "type": "integer",
              "description": ":ref:`soil-texture` *(Soil → Soil Texture)*",
              "examples": [
                1
              ]
            },
            "organic_matter_id": {
              "$id": "#/properties/farm/properties/soil/properties/organic_matter_id",
              "type": "integer",
              "description": ":ref:`soil-organic-matter` *(Soil → Soil Organic Matter)*",
              "examples": [
                2
              ]
            },
            "organic_matter_custom": {
              "$id": "#/properties/farm/properties/soil/properties/organic_matter_id",
              "type": [
                "number",
                "null"
              ],
              "description": "Custom SOM (send ``organic_matter_id: 5``) *(Soil → Soil Organic Matter)*",
              "examples": [
                2
              ]
            },
            "moisture_id": {
              "$id": "#/properties/farm/properties/soil/properties/moisture_id",
              "type": "integer",
              "description": ":ref:`soil-moisture` *(Soil → Soil Moisture)*",
              "examples": [
                1
              ]
            },
            "drainage_id": {
              "$id": "#/properties/farm/properties/soil/properties/drainage_id",
              "type": "integer",
              "description": ":ref:`soil-drainage` *(Soil → Soil Drainage)*",
              "examples": [
                1
              ]
            },
            "ph_id": {
              "$id": "#/properties/farm/properties/soil/properties/ph_id",
              "type": "integer",
              "description": ":ref:`soil-ph` *(Soil → Soil pH)*",
              "examples": [
                4
              ]
            }
          }
        },
        "residue": {
          "$id": "#/properties/crop/properties/residue",
          "type": "object",
          "description": "Crop residue (send ``{}`` if you have no residue at all)",
          "properties": {
            "value": {
              "$id": "#/properties/crop/properties/residue/properties/value",
              "type": [
                "number",
                "string",
                "null"
              ],
              "description": "Amount of crop residue (send ``null`` to estimate) *(Crop → Residue Amount)*",
              "minimum": 0,
              "examples": [
                2.5
              ]
            },
            "unit": {
              "$id": "#/properties/crop/properties/residue/properties/unit",
              "type": [
                "number",
                "string",
                "null"
              ],
              "description": "Weight-per-area :ref:`unit` *(Crop → Residue Unit)**",
              "examples": [
                "tonne / ha"
              ]
            },
            "management": {
              "$id": "#/properties/crop/properties/residue/properties/management",
              "type": [
                "integer",
                "string",
                "null"
              ],
              "description": ":ref:`residue-management-type` *(Crop → Residue Management)*",
              "examples": [
                4
              ]
            }
          }
        },
        "seed_amount": {
          "$id": "#/properties/crop/properties/seed_amount",
          "type": "object",
          "description": "Seed quantity (potato only, send ``{}`` otherwise) *(Crop → Seed Amount)*",
          "properties": {
            "value": {
              "$id": "#/properties/crop/properties/seed_amount/properties/value",
              "type": "number",
              "minimum": 0,
              "examples": [
                10
              ]
            },
            "unit": {
              "$id": "#/properties/crop/properties/seed_amount/properties/unit",
              "type": [
                "integer",
                "string"
              ],
              "description": ":ref:`unit` name or ID *(Crop → Seed Amount Unit)*"
            }
          }
        },
        "irrigation_calculation_type": {
          "$id": "#/properties/crop/properties/irrigation_calculation_type",
          "type": [
            "string",
            "integer"
          ],
          "description": "Irrigation Calculation Type (default or IPCC 2019) *(Irrigation → Irrigation Calculation Type)*",
          "examples": [
            1,
            2,
            "default_irrigation_type",
            "volume_irrigation_type"
          ]
        }
      }
    },
    "pesticides": {
      "$id": "#/properties/pesticides",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no pesticides",
      "items": {
        "$id": "#/properties/pesticides/items",
        "type": "object",
        "required": [
          "category_id",
          "percentage_rate",
          "application_rate"
        ],
        "properties": {
          "type_id": {
            "$id": "#/properties/pesticides/items/properties/type_id",
            "type": "integer",
            "description": ":ref:`pesticide-type` *(Inputs → Crop Protection → Type)*",
            "minimum": 0,
            "examples": [
              1
            ]
          },
          "category_id": {
            "$id": "#/properties/pesticides/items/properties/category_id",
            "type": "integer",
            "description": ":ref:`pesticide-category` *(Inputs →Crop Protection → Category)*",
            "examples": [
              3
            ]
          },
          "percentage_rate": {
            "$id": "#/properties/pesticides/items/properties/percentage_rate",
            "type": [
              "integer",
              "null"
            ],
            "description": "% active ingredient (for soil treatment, 0 otherwise) *(Inputs → Crop Protection → Active ingredient %)*",
            "minimum": 0,
            "maximum": 100,
            "default": 100,
            "examples": [
              100
            ]
          },
          "application_rate": {
            "$id": "#/properties/pesticides/items/properties/application_rate",
            "type": "object",
            "properties": {
              "value": {
                "$id": "#/properties/pesticides/items/properties/application_rate/properties/value",
                "type": "number",
                "description": "Application rate *(Inputs → Crop Protection → Application Rate)*",
                "minimum": 0,
                "examples": [
                  1
                ]
              },
              "unit": {
                "$id": "#/properties/pesticides/properties/application_rate/properties/unit",
                "type": [
                  "integer",
                  "string"
                ],
                "description": "Weight-per-area :ref:`unit` name or ID *(Inputs → Crop Protection → Application Rate)*",
                "examples": [
                  "kg / ha"
                ]
              }
            }
          }
        }
      }
    },
    "machinery": {
      "$id": "#/properties/machinery",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no machinery use",
      "items": {
        "$id": "#/properties/machinery/items",
        "type": "object",
        "description": "Machinery fuel use estimates (custom fuel use not yet supported)",
        "required": [
          "operations",
          "machinery",
          "fuel_type"
        ],
        "properties": {
          "operations": {
            "$id": "#/properties/machinery/items/properties/operation_count",
            "type": "number",
            "description": "*(Fuel & Energy → Field Operations → Number of Operations)*",
            "minimum": 0,
            "examples": [
              1
            ]
          },
          "number_of_bales": {
            "$id": "#/properties/machinery/items/properties/number_of_bales",
            "type": "number",
            "description": "*(Fuel & Energy → Field Operations → Number of Bales)*",
            "minimum": 0,
            "examples": [
              1
            ]
          },
          "machinery": {
            "$id": "#/properties/machinery/items/properties/machinery",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`machine` (provide this or ``machinery``) *(Fuel & Energy → Field Operations → Machine)*",
            "examples": [
              24
            ]
          },
          "fuel_type": {
            "$id": "#/properties/machinery/items/properties/fuel_type",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`direct-energy-type` *(Fuel & Energy → Field Operations → Fuel use)*",
            "enum": [
              102,
              103,
              "diesel",
              "petrol"
            ]
          }
        }
      }
    },
    "irrigation": {
      "$id": "#/properties/irrigation",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no irrigation",
      "items": {
        "$id": "#/properties/irrigation/items",
        "type": "object",
        "required": [
          "method",
          "allocation",
          "pumping_depth",
          "horizontal_distance",
          "water_added",
          "power_source"
        ],
        "properties": {
          "method": {
            "$id": "#/properties/irrigation/items/properties/method",
            "type": "integer",
            "description": ":ref:`irrigation-method` *(Irrigation → Irrigation Events → Method)*",
            "examples": [
              1
            ]
          },
          "allocation": {
            "$id": "#/properties/irrigation/items/properties/allocation",
            "type": "number",
            "description": "% of area irrigated *(N/A)*",
            "minimum": 0,
            "maximum": 100,
            "default": 100,
            "examples": [
              100
            ]
          },
          "pumping": {
            "$id": "#/properties/irrigation/items/properties/pumping",
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/irrigation/items/properties/pumping/properties/value",
                "type": "number",
                "description": "*(Irrigation → Irrigation Events → Pumping Depth Value)*",
                "minimum": 0,
                "examples": [
                  2
                ]
              },
              "unit": {
                "$id": "#/properties/irrigation/items/properties/pumping/properties/unit",
                "type": [
                  "integer",
                  "string"
                ],
                "description": "Distance :ref:`unit` name or ID *(Irrigation → Irrigation Events → Pumping Depth Unit)*",
                "examples": [
                  1
                ]
              }
            }
          },
          "horizontal_distance": {
            "$id": "#/properties/irrigation/items/properties/horizontal_distance",
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/irrigation/items/properties/horizontal_distance/properties/value",
                "type": "number",
                "description": "*(Irrigation → Irrigation Events → Horizontal Distance Value)*",
                "minimum": 0,
                "examples": [
                  200
                ]
              },
              "unit": {
                "$id": "#/properties/irrigation/items/properties/horizontal_distance/properties/unit",
                "type": [
                  "integer",
                  "string"
                ],
                "description": "Distance :ref:`unit` name or ID *(Irrigation → Irrigation Events → Horizontal Distance Unit)*",
                "examples": [
                  "km"
                ]
              }
            }
          },
          "water_added": {
            "$id": "#/properties/irrigation/items/properties/water_added",
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/irrigation/items/properties/water_added/properties/value",
                "type": "number",
                "description": "*(Irrigation → Irrigation Events → Water Added Value)*",
                "minimum": 0,
                "examples": [
                  0.1
                ]
              },
              "unit": {
                "$id": "#/properties/irrigation/items/properties/water_added/properties/unit",
                "type": [
                  "integer",
                  "string"
                ],
                "description": "Length (depth) or volume :ref:`unit` *(Irrigation → Irrigation Events → Water Added Unit)*",
                "examples": [
                  "litre"
                ]
              }
            }
          },
          "power_source": {
            "$id": "#/properties/irrigation/items/properties/power_source",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`irrigation-power-source` *(Irrigation → Irrigation Events → Power Source)*",
            "examples": [
              1
            ]
          }
        }
      }
    },
    "fertilisers": {
      "$id": "#/properties/fertilisers",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no fertiliser applications",
      "items": {
        "$id": "#/properties/fertilisers/items",
        "type": "object",
        "required": [
          "type",
          "production",
          "custom_ingredients",
          "application_rate",
          "rate_measure",
          "method",
          "inhibition_id"
        ],
        "properties": {
          "type": {
            "$id": "#/properties/fertilisers/items/properties/type",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`fertiliser-type` name or ID *(Inputs → Fertiliser → Fertiliser Type)*",
            "examples": [
              "Compose your own NPK"
            ]
          },
          "production": {
            "$id": "#/properties/fertilisers/items/properties/production",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`fertiliser-production-database` (Inputs → Fertiliser → Manufactured In). Note, no production emissions will be calculated for all digestates, slurries, manures and litter. However for these inputs a production type is required e.g. \"World\" for the API to be validated correctly.",
            "examples": [
              "Europe (2011)"
            ]
          },
          "application_rate": {
            "$id": "#/properties/fertilisers/items/properties/application_rate",
            "type": "object",
            "properties": {
              "value": {
                "$id": "#/properties/fertilisers/items/properties/application_rate/properties/value",
                "type": "number",
                "description": ":ref:`unit` name or ID *(Inputs → Fertiliser → Application Rate Value)*",
                "minimum": 0,
                "examples": [
                  1
                ]
              },
              "unit": {
                "$id": "#/properties/fertilisers/properties/application_rate/properties/unit",
                "type": [
                  "integer",
                  "string"
                ],
                "description": ":ref:`unit` name or ID *(Inputs → Fertiliser → Application Rate Unit)*"
              }
            }
          },
          "custom_ingredients": {
            "$id": "#/properties/fertilisers/items/properties/application_rate",
            "type": "object",
            "description": "Send this data only for 'Compose your own N/P/K' (``{}`` otherwise); you cannot customise the ingredients of built-in fertiliser types",
            "properties": {
              "n_total_percentage": {
                "$id": "#/properties/fertilisers/items/properties/custom_ingredients/properties/n_total_percentage",
                "type": "number",
                "description": "Total of ammonia, urea and nitric percentages  *(Inputs → Fertiliser → %N)*",
                "minimum": 0,
                "maximum": 100,
                "examples": [
                  0
                ]
              },
              "n_ammonia_percentage": {
                "$id": "#/properties/fertilisers/items/properties/custom_ingredients/properties/n_ammonia_percentage",
                "type": "number",
                "description": "*(Inputs → Fertiliser → %N (as ammonium-N))*",
                "minimum": 0,
                "maximum": 100,
                "examples": [
                  0
                ]
              },
              "n_nitric_percentage": {
                "$id": "#/properties/fertilisers/items/properties/custom_ingredients/properties/n_nitric_percentage",
                "type": "number",
                "description": "*(Inputs → Fertiliser → %N (as nitrate-N)*",
                "minimum": 0,
                "maximum": 100,
                "examples": [
                  0
                ]
              },
              "n_urea_percentage": {
                "$id": "#/properties/fertilisers/items/properties/custom_ingredients/properties/n_urea_percentage",
                "type": "number",
                "description": "*(Inputs → Fertiliser → %N (as Urea-N))*",
                "minimum": 0,
                "maximum": 100,
                "examples": [
                  0
                ]
              },
              "p2o5_percentage": {
                "$id": "#/properties/fertilisers/items/properties/custom_ingredients/properties/p2o5_percentage",
                "type": "number",
                "description": "*(Inputs → Fertiliser → %P2O5 or %P)*",
                "minimum": 0,
                "maximum": 100,
                "examples": [
                  0
                ]
              },
              "p2o5_percentage_type_id": {
                "$id": "#/properties/fertilisers/items/properties/custom_ingredients/properties/p2o5_percentage_type_id",
                "type": "number",
                "description": ":ref:`fertiliser-nutrient` *(Inputs → Fertiliser → %P2O5 or %P)*",
                "enum": [
                  4,
                  2
                ]
              },
              "k2o_percentage": {
                "$id": "#/properties/fertilisers/items/properties/custom_ingredients/properties/k2o_percentage",
                "type": "number",
                "description": "*(Inputs → Fertiliser → %K2O or %K)*",
                "minimum": 0,
                "maximum": 100,
                "examples": [
                  0
                ]
              },
              "k2o_percentage_type_id": {
                "$id": "#/properties/fertilisers/items/properties/custom_ingredients/properties/k2o_percentage_type_id",
                "type": "number",
                "description": ":ref:`fertiliser-nutrient` *(Inputs → Fertiliser → %K2O or %K)*",
                "examples": [
                  5
                ],
                "enum": [
                  3,
                  5
                ]
              }
            }
          },
          "rate_measure": {
            "$id": "#/properties/fertilisers/items/properties/rate_measure",
            "type": "string",
            "description": "A :ref:`fertiliser-nutrient` ingredient, or '' / 'product' *(Inputs → Fertiliser → Fertiliser Weight or Unit)*",
            "examples": [
              "product"
            ]
          },
          "method": {
            "$id": "#/properties/fertilisers/items/properties/method",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`fertiliser-method` name or ID *(Inputs → Fertiliser → Application Method)*",
            "examples": [
              2
            ]
          },
          "inhibition_id": {
            "$id": "#/properties/fertilisers/items/properties/inhibition_id",
            "type": "integer",
            "description": ":ref:`fertiliser-inhibition` *(Inputs → Fertiliser → Emissions Inhibitors)*",
            "examples": [
              1
            ]
          }
        }
      }
    },
    "direct_energy": {
      "$id": "#/properties/direct_energy",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no direct energy use",
      "items": {
        "$id": "#/properties/direct_energy/items",
        "type": "object",
        "required": [
          "source",
          "usage"
        ],
        "properties": {
          "usage": {
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "source": {
                "$id": "#/properties/direct-energy/items/properties/usage/properties/factor",
                "type": [
                  "integer",
                  "string"
                ],
                "description": ":ref:`direct-energy-type` *(Fuel & Energy → Direct Energy → Source)*"
              },
              "value": {
                "$id": "#/properties/direct-energy/items/properties/usage/properties/value",
                "type": "number",
                "description": "*(Fuel & Energy → Direct Energy → Energy Used)*",
                "minimum": 0,
                "examples": [
                  4
                ]
              },
              "category": {
                "$id": "#/properties/direct-energy/items/properties/usage/properties/category",
                "type": "integer",
                "description": ":ref:`energy-category` ID *(Fuel & Energy → Direct Energy → Category)*"
              },
              "unit": {
                "$id": "#/properties/direct-energy/items/properties/usage/properties/unit",
                "type": [
                  "string",
                  "integer"
                ],
                "description": ":ref:`unit` name or ID *(Fuel & Energy → Direct Energy → Energy Used Unit)*"
              }
            }
          }
        }
      }
    },
    "land_management": {
      "$id": "#/properties/land_management",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no management changes",
      "items": {
        "$id": "#/properties/land_management/items",
        "type": "object",
        "required": [
          "change_id",
          "years_ago",
          "allocation",
          "forest"
        ],
        "properties": {
          "change_id": {
            "$id": "#/properties/land_management/items/properties/change_id",
            "type": "integer",
            "description": ":ref:`management-practice-change` (must be valid for current climate & soil moisture) *(Carbon → (drop-downs))*",
            "examples": [
              13
            ]
          },
          "years_ago": {
            "$id": "#/properties/land_management/items/properties/years_ago",
            "type": "number",
            "description": "*(Carbon → Years Ago)* updated to accept changes considered at equilibrium",
            "maximum": 99,
            "minimum": 0,
            "examples": [
              1
            ]
          },
          "allocation": {
            "$id": "#/properties/land_management/items/properties/allocation",
            "type": "number",
            "description": "% of field changed *(Carbon → Percentage of Field)*",
            "default": 100,
            "maximum": 100,
            "minimum": 0,
            "examples": [
              100
            ]
          },
          "forest": {
            "$id": "#/properties/land_management/items/properties/forest",
            "type": "object",
            "description": "forest data (only provide if your change is to or from forest, otherwise ``{}``)",
            "properties": {
              "type": {
                "$id": "#/properties/land_management/items/properties/forest/properties/type",
                "type": [
                  "integer",
                  "string"
                ],
                "description": ":ref:`forest-type` *(Carbon → Forest Type)*"
              },
              "age_years": {
                "$id": "#/properties/land_management/items/properties/forest/properties/age_years",
                "type": "number",
                "description": "Forest age, in years *(Carbon → Forest Age)*"
              }
            }
          }
        }
      }
    },
    "transport": {
      "$id": "#/properties/transport",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no transport",
      "items": {
        "$id": "#/properties/transport/items",
        "type": "object",
        "required": [
          "mode",
          "weight",
          "distance"
        ],
        "properties": {
          "mode": {
            "$id": "#/properties/transport/items/properties/mode",
            "type": [
              "string",
              "integer"
            ],
            "description": ":ref:`transport-type` *(Transport → Mode)*",
            "examples": [
              "road LGV diesel (light goods vehicle <3.5t)"
            ]
          },
          "weight": {
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/transport/items/properties/weight/properties/value",
                "type": "number",
                "description": "*(Transport → Weight Value)*",
                "minimum": 0,
                "examples": [
                  4
                ]
              },
              "unit": {
                "$id": "#/properties/transport/items/properties/weight/properties/unit",
                "type": [
                  "string",
                  "number"
                ],
                "examples": [
                  "tonne"
                ],
                "description": ":ref:`unit` name or ID *(Transport → Weight Value)*"
              }
            }
          },
          "distance": {
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/transport/items/properties/distance/properties/value",
                "type": "number",
                "description": "*(Transport → Distance Value)*",
                "minimum": 0,
                "examples": [
                  2000
                ]
              },
              "unit": {
                "$id": "#/properties/transport/items/properties/distance/properties/unit",
                "type": [
                  "string",
                  "integer"
                ],
                "description": ":ref:`unit` name or ID *(Transport → Distance Value)*",
                "examples": [
                  "km"
                ]
              }
            }
          }
        }
      }
    },
    "tree_biomass": {
      "$id": "#/properties/tree_biomass",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no tree biomass",
      "items": {
        "$id": "#/properties/tree_biomass/items",
        "type": "object",
        "required": [
          "tree_type",
          "density_last_year",
          "size_last_year",
          "size_this_year",
          "num_trees_delta"
        ],
        "properties": {
          "tree_type": {
            "$id": "#/properties/tree_biomass/items/properties/tree_type",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`tree-type` *(Carbon → Out of Crop .. → Choose Tree Species)*",
            "examples": [
              5
            ]
          },
          "density_last_year": {
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/tree_biomass/items/properties/density_last_year/properties/value",
                "type": "number",
                "description": ":ref:`unit` name or ID *(Carbon → Out of Crop .. → Density Last Year Value)*",
                "minimum": 0,
                "examples": [
                  100
                ]
              },
              "unit": {
                "$id": "#/properties/tree_biomass/items/properties/density_last_year/properties/unit",
                "type": [
                  "string",
                  "number"
                ],
                "description": ":ref:`unit` name or ID *(Carbon → Out of Crop .. → Density Last Year Unit)*",
                "examples": [
                  "trees / hectare"
                ]
              }
            }
          },
          "size_last_year": {
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/tree_biomass/items/properties/size_last_year/properties/value",
                "type": "number",
                "description": "*(Carbon → Out of Crop .. → Size Last Year Value)*",
                "minimum": 0,
                "examples": [
                  2000
                ]
              },
              "unit": {
                "$id": "#/properties/tree_biomass/items/properties/size_last_year/properties/unit",
                "type": [
                  "string",
                  "integer"
                ],
                "description": ":ref:`unit` name or ID *(Carbon → Out of Crop .. → Size Last Year Unit)*",
                "examples": [
                  "cm"
                ]
              }
            }
          },
          "size_this_year": {
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/tree_biomass/items/properties/size_this_year/properties/value",
                "type": "number",
                "description": "*(Carbon → Out of Crop .. → Size This Year Value)*",
                "minimum": 0,
                "examples": [
                  2000
                ]
              },
              "unit": {
                "$id": "#/properties/tree_biomass/items/properties/size_this_year/properties/unit",
                "type": [
                  "string",
                  "integer"
                ],
                "description": ":ref:`unit` name or ID *(Carbon → Out of Crop .. → Size This Year Unit)*",
                "examples": [
                  "cm"
                ]
              }
            }
          },
          "num_trees_delta": {
            "type": "object",
            "required": [
              "value",
              "unit"
            ],
            "properties": {
              "value": {
                "$id": "#/properties/tree_biomass/items/properties/num_trees_delta/properties/value",
                "type": "number",
                "description": "*(Carbon → Out of Crop .. → Trees Planted / Lost Value)*",
                "examples": [
                  2000,
                  -3
                ]
              },
              "unit": {
                "$id": "#/properties/tree_biomass/items/properties/num_trees_delta/properties/unit",
                "type": [
                  "string",
                  "number"
                ],
                "description": ":ref:`unit` name or ID *(Carbon → Out of Crop .. → Trees Planted / Lost Unit)*",
                "examples": [
                  "trees / hectare"
                ]
              }
            }
          }
        }
      }
    },
    "co_products": {
      "$id": "#/properties/co_products",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no co-products",
      "items": {
        "$id": "#/properties/co_products/items",
        "type": "object",
        "required": [
          "name",
          "percentage_main_value"
        ],
        "properties": {
          "name": {
            "$id": "#/properties/co_products/items/properties/name",
            "type": "string",
            "description": "string name *(Product → CoProduct → name)*",
            "examples": [
              "test_co_product"
            ]
          },
          "percentage_main_value": {
            "$id": "#/properties/co_products/items/properties/percentage_main_value",
            "type": "number",
            "description": "`int` or `float` value *(Product → CoProduct → percentage main value)*",
            "minimum": 0,
            "examples": [
              50
            ]
          }
        }
      }
    },
    "processing": {
      "$id": "#/properties/processing",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no processing",
      "items": {
        "$id": "#/properties/processing/items",
        "type": "object",
        "required": [
          "_type",
          "allocation",
          "power_source"
        ],
        "properties": {
          "_type": {
            "$id": "#/properties/processing/items/properties/_type",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`processing-_type` name or ID *(Processing → Type)*",
            "examples": [
              1,
              "`washing`"
            ]
          },
          "allocation": {
            "$id": "#/properties/processing/items/properties/allocation",
            "type": "number",
            "description": "int or float *(Processing → Allocation .. → Number)*",
            "examples": [
              100
            ]
          },
          "power_source": {
            "$id": "#/properties/processing/items/properties/power_source",
            "type": [
              "string",
              "integer"
            ],
            "description": ":ref:`factor` name or ID *(Processing → Power Source .. → Selection of relevant power sources)*",
            "examples": [
              102
            ]
          }
        }
      }
    },
    "storage": {
      "$id": "#/properties/storage",
      "type": "array",
      "description": "Send an empty list ``[]`` if you have no storage",
      "items": {
        "$id": "#/properties/storage/items",
        "type": "object",
        "required": [
          "cipc_application",
          "cipc_dose",
          "storage_power_source",
          "store_loading_power_source",
          "unloading_power_source",
          "stored_allocation",
          "temperature",
          "time"
        ],
        "properties": {
          "cipc_application": {
            "$id": "#/properties/storage/items/properties/cipc_application",
            "type": "number",
            "examples": [
              1
            ]
          },
          "cipc_dose": {
            "$id": "#/properties/storage/items/properties/cipc_dose",
            "type": "number",
            "examples": [
              1
            ]
          },
          "storage_power_source": {
            "$id": "#/properties/storage/items/properties/storage_power_source",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`factor` name or ID *(Storage → Power Source .. → Selection of relevant power sources)*",
            "examples": [
              106
            ]
          },
          "store_loading_power_source": {
            "$id": "#/properties/storage/items/properties/store_loading_power_source",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`factor` name or ID *(Storage → Power Source .. → Selection of relevant power sources)*",
            "examples": [
              102
            ]
          },
          "unloading_power_source": {
            "$id": "#/properties/storage/items/properties/unloading_power_source",
            "type": [
              "integer",
              "string"
            ],
            "description": ":ref:`factor` name or ID *(Storage → Power Source .. → Selection of relevant power sources)*",
            "examples": [
              102
            ]
          },
          "stored_allocation": {
            "$id": "#/properties/storage/items/properties/stored_allocation",
            "type": "number",
            "description": "int or float *(Storage → Stored Allocation .. → Number)*",
            "examples": [
              100
            ]
          },
          "temperature": {
            "$id": "#/properties/storage/items/properties/temperature",
            "type": "object",
            "required": [
              "unit",
              "value"
            ],
            "properties": {
              "unit": {
                "$id": "#/properties/storage/items/properties/temperature/properties/unit",
                "type": [
                  "integer",
                  "string"
                ],
                "description": ":ref:`unit` name or ID *(Temperature)*",
                "examples": [
                  "°C"
                ]
              },
              "value": {
                "$id": "#/properties/storage/items/properties/temperature/properties/value",
                "type": "number",
                "examples": [
                  5
                ]
              }
            }
          },
          "time": {
            "$id": "#/properties/storage/items/properties/time",
            "type": "object",
            "required": [
              "unit",
              "value"
            ],
            "properties": {
              "unit": {
                "$id": "#/properties/storage/items/properties/time/properties/unit",
                "type": [
                  "string",
                  "number"
                ],
                "description": ":ref:`unit` name or ID *(Storage time unit of measurement)*",
                "examples": [
                  "second"
                ]
              },
              "value": {
                "$id": "#/properties/storage/items/properties/time/properties/value",
                "type": "number",
                "examples": [
                  1
                ]
              }
            }
          }
        }
      }
    },
    "waste_water": {
      "$id": "#/properties/crop/properties/waste_water",
      "type": "object",
      "properties": {
        "waste_water_production": {
          "$id": "#/properties/waste_water/properties/waste_water_production",
          "type": "object",
          "required": [
            "value",
            "unit"
          ],
          "properties": {
            "value": {
              "$id": "#/properties/waste_water/properties/waste_water_production/properties/value",
              "type": "number",
              "description": "*(Fuel & Energy → Waste water emissions → Waste water volume)*",
              "minimum": 0,
              "examples": [
                12
              ]
            },
            "unit": {
              "$id": "#/properties/waste_water/properties/waste_water_production/properties/unit",
              "type": [
                "string",
                "number"
              ],
              "examples": [
                "litres"
              ],
              "description": "*(Fuel & Energy → Waste water emissions → Waste water volume)*"
            }
          }
        },
        "oxygen_demand": {
          "$id": "#/properties/waste_water/properties/oxygen_demand",
          "type": "object",
          "required": [
            "value",
            "unit"
          ],
          "properties": {
            "value": {
              "$id": "#/properties/waste_water/properties/oxygen_demand/properties/value",
              "type": "number",
              "description": "*(Fuel & Energy → Waste water emissions → Oxygen demand type)*",
              "minimum": 0,
              "examples": [
                4
              ]
            },
            "unit": {
              "$id": "#/properties/waste_water/properties/oxygen_demand/properties/unit",
              "type": [
                "string",
                "number"
              ],
              "examples": [
                "kg / litre"
              ],
              "description": "*(Fuel & Energy → Waste water emissions → Oxygen demand type)*"
            }
          }
        }
      }
    },
    "flooding": {
      "$id": "#/properties/flooding",
      "type": "object",
      "description": "Flooding (Rice only, send an empty object {} if the rice field is not flooded)",
      "properties": {
        "time_under_cultivation": {
          "$id": "#/properties/flooding/items/properties/time_under_cultivation",
          "type": "object",
          "required": [
            "value",
            "unit"
          ],
          "properties": {
            "value": {
              "$id": "#/properties/flooding/items/properties/time_under_cultivation/properties/value",
              "type": "number",
              "description": "*(Inputs → Flooding → Time under cultivation)*",
              "minimum": 0,
              "examples": [
                1
              ]
            },
            "unit": {
              "$id": "#/properties/flooding/items/properties/time_under_cultivation/properties/unit",
              "type": [
                "string",
                "number"
              ],
              "description": "*(Inputs → Flooding → Time under cultivation)*",
              "examples": [
                "wk"
              ]
            }
          }
        },
        "before_cultivation": {
          "$id": "#/properties/flooding/items/properties/before_cultivation",
          "type": [
            "integer",
            "string"
          ],
          "description": "*(Inputs → Water management → Before cultivation)*",
          "examples": [
            "Flooded pre-season"
          ]
        },
        "during_cultivation": {
          "$id": "#/properties/flooding/items/properties/during_cultivation",
          "type": [
            "integer",
            "string"
          ],
          "description": "*(Inputs → Water management → During cultivation)*",
          "examples": [
            "Continuously flooded"
          ]
        }
      }
    },
    "green_manure": {
      "$id": "#/properties/green_manure",
      "type": "object",
      "description": "Crop green manure management, (Rice only, send an empty object {} if you do not use green manure)",
      "properties": {
        "amount": {
          "$id": "#/properties/green_manure/items/properties/before_cultivation",
          "type": "object",
          "required": [
            "value",
            "unit"
          ],
          "properties": {
            "value": {
              "$id": "#/properties/green_manure/items/properties/amount/properties/value",
              "type": "number",
              "description": "*(Inputs → Crop green manure management → Green manure amount (Dry Matter))*",
              "minimum": 1,
              "examples": [
                1
              ]
            },
            "unit": {
              "$id": "#/properties/green_manure/items/properties/amount/properties/unit",
              "type": [
                "string",
                "number"
              ],
              "description": "*(Inputs → Crop green manure management → Green manure amount (Dry Matter))*",
              "examples": [
                "tonne / ha"
              ]
            }
          }
        },
        "years_ago": {
          "$id": "#/properties/green_manure/items/properties/years_ago",
          "type": "number",
          "description": "*(Inputs → Crop green manure management → Green manure years ago)*",
          "maximum": 20,
          "minimum": 0,
          "examples": [
            1
          ]
        },
        "allocation": {
          "$id": "#/properties/green_manure/items/properties/allocation",
          "type": "number",
          "description": "*(Inputs → Crop green manure management → Green manure allocation)*",
          "default": 100,
          "maximum": 100,
          "minimum": 0,
          "examples": [
            100
          ]
        }
      }
    }
  }
}
